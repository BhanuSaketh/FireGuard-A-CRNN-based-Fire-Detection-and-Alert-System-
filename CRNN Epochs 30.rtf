{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.22621}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 "C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\venv\\Scripts\\python.exe" "C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\test.py" \par
2024-03-17 10:40:43.285079: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\par
WARNING:tensorflow:From C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\venv\\Lib\\site-packages\\keras\\src\\losses.py:2976: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.\par
\par
Found 9889 images belonging to 4 classes.\par
Found 14830 images belonging to 4 classes.\par
Found 24711 images belonging to 4 classes.\par
WARNING:tensorflow:From C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\venv\\Lib\\site-packages\\keras\\src\\backend.py:873: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\par
\par
WARNING:tensorflow:From C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\venv\\Lib\\site-packages\\keras\\src\\layers\\pooling\\max_pooling2d.py:161: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\par
\par
2024-03-17 10:40:50.906002: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\par
To enable the following instructions: SSE SSE2 SSE3 SSE4.1 SSE4.2 AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\par
Epoch 1/30\par
WARNING:tensorflow:From C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\venv\\Lib\\site-packages\\keras\\src\\utils\\tf_utils.py:492: The name tf.ragged.RaggedTensorValue is deprecated. Please use tf.compat.v1.ragged.RaggedTensorValue instead.\par
\par
WARNING:tensorflow:From C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\venv\\Lib\\site-packages\\keras\\src\\engine\\base_layer_utils.py:384: The name tf.executing_eagerly_outside_functions is deprecated. Please use tf.compat.v1.executing_eagerly_outside_functions instead.\par
\par
619/619 [==============================] - 352s 564ms/step - loss: 1.1106 - accuracy: 0.5279 - val_loss: 1.0509 - val_accuracy: 0.5706\par
Epoch 2/30\par
619/619 [==============================] - 320s 517ms/step - loss: 0.9436 - accuracy: 0.6265 - val_loss: 0.7670 - val_accuracy: 0.7011\par
Epoch 3/30\par
619/619 [==============================] - 316s 511ms/step - loss: 0.8149 - accuracy: 0.6894 - val_loss: 0.8419 - val_accuracy: 0.7013\par
Epoch 4/30\par
619/619 [==============================] - 328s 530ms/step - loss: 0.7089 - accuracy: 0.7339 - val_loss: 1.2630 - val_accuracy: 0.5877\par
Epoch 5/30\par
619/619 [==============================] - 351s 568ms/step - loss: 0.6311 - accuracy: 0.7628 - val_loss: 0.6018 - val_accuracy: 0.7856\par
Epoch 6/30\par
619/619 [==============================] - 319s 515ms/step - loss: 0.5364 - accuracy: 0.8014 - val_loss: 0.3980 - val_accuracy: 0.8503\par
Epoch 7/30\par
619/619 [==============================] - 317s 512ms/step - loss: 0.4552 - accuracy: 0.8319 - val_loss: 0.3450 - val_accuracy: 0.8798\par
Epoch 8/30\par
619/619 [==============================] - 319s 516ms/step - loss: 0.3999 - accuracy: 0.8534 - val_loss: 0.2444 - val_accuracy: 0.9222\par
Epoch 9/30\par
619/619 [==============================] - 319s 515ms/step - loss: 0.4557 - accuracy: 0.8325 - val_loss: 0.2892 - val_accuracy: 0.9047\par
Epoch 10/30\par
619/619 [==============================] - 317s 513ms/step - loss: 0.3539 - accuracy: 0.8749 - val_loss: 0.6198 - val_accuracy: 0.7668\par
Epoch 11/30\par
619/619 [==============================] - 318s 514ms/step - loss: 0.3516 - accuracy: 0.8734 - val_loss: 0.1904 - val_accuracy: 0.9337\par
Epoch 12/30\par
619/619 [==============================] - 315s 509ms/step - loss: 0.2958 - accuracy: 0.8948 - val_loss: 0.3308 - val_accuracy: 0.8877\par
Epoch 13/30\par
619/619 [==============================] - 317s 512ms/step - loss: 0.2652 - accuracy: 0.9088 - val_loss: 0.2361 - val_accuracy: 0.9119\par
Epoch 14/30\par
619/619 [==============================] - 317s 513ms/step - loss: 0.2847 - accuracy: 0.9011 - val_loss: 0.2660 - val_accuracy: 0.9116\par
Epoch 15/30\par
619/619 [==============================] - 321s 519ms/step - loss: 0.2411 - accuracy: 0.9167 - val_loss: 0.2323 - val_accuracy: 0.9195\par
Epoch 16/30\par
619/619 [==============================] - 437s 706ms/step - loss: 0.4622 - accuracy: 0.8237 - val_loss: 0.4940 - val_accuracy: 0.8187\par
Epoch 17/30\par
619/619 [==============================] - 678s 1s/step - loss: 0.2687 - accuracy: 0.9061 - val_loss: 0.2699 - val_accuracy: 0.9061\par
Epoch 18/30\par
619/619 [==============================] - 640s 1s/step - loss: 0.2061 - accuracy: 0.9278 - val_loss: 0.1341 - val_accuracy: 0.9574\par
Epoch 19/30\par
619/619 [==============================] - 754s 1s/step - loss: 0.1896 - accuracy: 0.9339 - val_loss: 0.1349 - val_accuracy: 0.9568\par
Epoch 20/30\par
619/619 [==============================] - 659s 1s/step - loss: 0.2376 - accuracy: 0.9205 - val_loss: 0.1731 - val_accuracy: 0.9405\par
Epoch 21/30\par
619/619 [==============================] - 545s 881ms/step - loss: 0.2060 - accuracy: 0.9276 - val_loss: 0.1569 - val_accuracy: 0.9466\par
Epoch 22/30\par
619/619 [==============================] - 310s 501ms/step - loss: 0.1696 - accuracy: 0.9413 - val_loss: 0.1086 - val_accuracy: 0.9643\par
Epoch 23/30\par
619/619 [==============================] - 307s 496ms/step - loss: 0.1825 - accuracy: 0.9375 - val_loss: 0.0912 - val_accuracy: 0.9705\par
Epoch 24/30\par
619/619 [==============================] - 308s 497ms/step - loss: 0.1767 - accuracy: 0.9407 - val_loss: 0.1160 - val_accuracy: 0.9627\par
Epoch 25/30\par
619/619 [==============================] - 308s 498ms/step - loss: 0.1451 - accuracy: 0.9493 - val_loss: 0.0952 - val_accuracy: 0.9659\par
Epoch 26/30\par
619/619 [==============================] - 307s 497ms/step - loss: 0.1625 - accuracy: 0.9437 - val_loss: 0.0837 - val_accuracy: 0.9697\par
Epoch 27/30\par
619/619 [==============================] - 318s 514ms/step - loss: 0.1522 - accuracy: 0.9480 - val_loss: 0.2204 - val_accuracy: 0.9232\par
Epoch 28/30\par
619/619 [==============================] - 323s 522ms/step - loss: 0.1538 - accuracy: 0.9485 - val_loss: 0.0921 - val_accuracy: 0.9687\par
Epoch 29/30\par
619/619 [==============================] - 323s 522ms/step - loss: 0.1503 - accuracy: 0.9520 - val_loss: 0.0945 - val_accuracy: 0.9697\par
Epoch 30/30\par
619/619 [==============================] - 311s 503ms/step - loss: 0.1498 - accuracy: 0.9496 - val_loss: 0.0718 - val_accuracy: 0.9794\par
1545/1545 [==============================] - 255s 165ms/step - loss: 0.0699 - accuracy: 0.9793\par
Test accuracy: 0.9793209433555603\par
1545/1545 [==============================] - 215s 138ms/step\par
Confusion Matrix:\par
[[4618   30    3   19]\par
 [  65 7622   34   66]\par
 [  22   32 4816    9]\par
 [  46  159   26 7144]]\par
Classification Report:\par
              precision    recall  f1-score   support\par
\par
           0       0.97      0.99      0.98      4670\par
           1       0.97      0.98      0.98      7787\par
           2       0.99      0.99      0.99      4879\par
           3       0.99      0.97      0.98      7375\par
\par
    accuracy                           0.98     24711\par
   macro avg       0.98      0.98      0.98     24711\par
weighted avg       0.98      0.98      0.98     24711\par
\par
Mean Prediction Value: 0.9724654\par
C:\\Users\\megha\\OneDrive\\Desktop\\mini project\\venv\\Lib\\site-packages\\keras\\src\\engine\\training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\par
  saving_api.save_model(\par
1545/1545 [==============================] - 217s 140ms/step\par
Accuracy: 0.9793209501841286\par
Precision: 0.9794045675797024\par
Recall: 0.9793209501841286\par
F1 Score: 0.9793194656716169\par
\par
Process finished with exit code 0\par
}
 