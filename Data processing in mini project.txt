Data preprocessing is primarily done using the ImageDataGenerator class from TensorFlow's Keras API. This class is utilized to perform data augmentation and normalization for the training, validation, and testing datasets.

Data Augmentation: Augmentation techniques such as rotation, width shift, height shift, shear, zoom, and horizontal flip are applied to the training dataset. This is done to artificially increase the diversity of the training set and improve the model's generalization.
python

train_datagen = ImageDataGenerator(
    rescale=1./255,
    rotation_range=40,
    width_shift_range=0.2,
    height_shift_range=0.2,
    shear_range=0.2,
    zoom_range=0.2,
    horizontal_flip=True,
    fill_mode='nearest'
)


Normalization: Pixel values of images are normalized by dividing by 255 for all datasets (training, validation, and testing). This rescales the pixel values to the range [0, 1].

validation_datagen = ImageDataGenerator(rescale=1./255)
test_datagen = ImageDataGenerator(rescale=1./255)


Data Flow Generation: The flow_from_directory method is used to generate batches of augmented/normalized data from directories containing images. It automatically infers class labels from the subdirectory structure.


train_generator = train_datagen.flow_from_directory(
    train_dir,
    target_size=IMAGE_SIZE,
    batch_size=BATCH_SIZE,
    class_mode='categorical'
)

validation_generator = validation_datagen.flow_from_directory(
    validation_dir,
    target_size=IMAGE_SIZE,
    batch_size=BATCH_SIZE,
    class_mode='categorical'
)

test_generator = test_datagen.flow_from_directory(
    test_dir,
    target_size=IMAGE_SIZE,
    batch_size=BATCH_SIZE,
    class_mode='categorical',
    shuffle=False
)
